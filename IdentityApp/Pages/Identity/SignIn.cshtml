@page "{returnUrl?}"
@model IdentityApp.Pages.Identity.SignInModel

@{
  ViewData["showNav"] = false;
  ViewData["banner"] = "Sign In";
}

<div asp-validation-summary="All" class="text-danger m-2"></div>

@if (TempData.ContainsKey("message"))
{
  <div class="alert alert-danger">@TempData["message"]</div>
}

<div class="container-fluid">
  <div class="row">
    <div class="col-6>">
      <h6>Sign In with a Password</h6>
      <form method="post">
        <div class="form-group">
          <label>Email</label>
          <input class="form-control" name="email" />
        </div>
        <div class="form-group">
          <label>Password</label>
          <input class="form-control" type="password" name="password" />
        </div>

        <button type="submit" class="btn btn-primary">Sign In</button>
        <a asp-page="SignUp" class="btn btn-primary">Register</a>
        <a asp-page="UserPasswordRecovery" class="btn btn-secondary">Forgot Password?</a>
      </form>
    </div>

    <div class="col-auto">
      <h6>Sign In with a Social Media Account</h6>
      <form method="post" asp-page="SignIn" asp-page-handler="External">
        @foreach (var scheme in await Model.SignInManager.GetExternalAuthenticationSchemesAsync())
        {
          <partial name="_ExternalButtonPartial" model="scheme" />
        }
      </form>
    </div>
  </div>
</div>
